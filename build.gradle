plugins {
	id 'fabric-loom' version '0.7-SNAPSHOT'
	id 'maven-publish'
	id 'signing'
}

repositories {
	maven{
		name = "TerraformersMC"
		url = 'https://maven.terraformersmc.com/'
	}
	maven { url "https://maven.shedaniel.me/" }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
	accessWidener = file("src/main/resources/bendylib.accesswidener")
}

sourceSets	{

	//Testmod is a heavily modified version of Emotecraft.

	testmod{
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
	}
}

dependencies {
	/*
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	 */

	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"


	implementation 'com.google.code.gson:gson:2.8.5' //GSon serializer
	implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json"){
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

task javadocJar(type: Jar, dependsOn: classes){
	classifier = "javadoc"
	from javadoc
}

ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.secretKeyRingFile"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''
ext["sonatypeStagingProfileId"] = ''

//copyed from https://getstream.io/blog/publishing-libraries-to-mavencentral-2021/
File secretPropsFile = project.rootProject.file('keys.properties')
if (secretPropsFile.exists()) {
	Properties p = new Properties()
	new FileInputStream(secretPropsFile).withCloseable { is ->
		p.load(is)
	}
	p.each { name, value ->
		ext[name] = value
	}
} else {
	ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID')
	ext["signing.password"] = System.getenv('SIGNING_PASSWORD')
	ext["signing.secretKeyRingFile"] = System.getenv('SIGNING_SECRET_KEY_RING_FILE')
	ext["ossrhUsername"] = System.getenv('OSSRH_USERNAME')
	ext["ossrhPassword"] = System.getenv('OSSRH_PASSWORD')
	ext["sonatypeStagingProfileId"] = System.getenv('SONATYPE_STAGING_PROFILE_ID')
}
signing {
	if (ossrhPassword != null) {
		sign publishing.publications
	}
}


// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar"){
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
			artifact(javadocJar)
			pom{
				name = "bendy-lib"
				description = "Minecraft FabricMC model render library"
				url = 'https://github.com/KosmX/bendy-lib'
				developers {
					developer {
						id = 'kosmx'
						name = 'KosmX'
						email = 'kosmx.mc@gmail.com'
					}
				}

				licenses{
					license{
						name = "Creative Commons Attribution 4.0 International Public License"
						url = "https://creativecommons.org/licenses/by/4.0/legalcode"
					}
				}

				scm {
					connection = 'scm:git:github.com/kosmx/bendy-lib.git'
					developerConnection = 'scm:git:github.com/kosmx/bendy-lib.git'
					url = 'https://github.com/KosmX/bendy-lib'
				}
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		if(ossrhPassword != null && false) {
			maven {
				name = "mavenCentral" //:D
				url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
				credentials {
					username ossrhUsername
					password ossrhPassword
				}

			}
		}
		if(System.getenv("GITHUB_ACTOR") != null) {
			maven {
				name = "GitHubPackages"
				url = "https://maven.pkg.github.com/kosmx/bendy-lib"
				credentials {
					username = System.getenv("GITHUB_ACTOR")
					password = System.getenv("GITHUB_TOKEN")
				}
			}
		}
		else {
			mavenLocal()
		}
	}
}